// Generated by Haxe 4.1.0-rc.1+0d88c583b
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.crypto.mode {
	public class ECB : global::haxe.lang.HxObject {
		
		public ECB(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ECB() {
			global::haxe.crypto.mode.ECB.__hx_ctor_haxe_crypto_mode_ECB(this);
		}
		
		
		protected static void __hx_ctor_haxe_crypto_mode_ECB(global::haxe.crypto.mode.ECB __hx_this) {
		}
		
		
		public static void encrypt(global::haxe.io.Bytes src, int blockSize, global::haxe.lang.Function encryptBlock) {
			int i = 0;
			int len = src.length;
			while (( i < len )) {
				encryptBlock.__hx_invoke4_o(default(double), src, ((double) (i) ), global::haxe.lang.Runtime.undefined, default(double), src, ((double) (i) ), global::haxe.lang.Runtime.undefined);
				i += blockSize;
			}
			
		}
		
		
		public static void decrypt(global::haxe.io.Bytes src, int blockSize, global::haxe.lang.Function decryptBlock) {
			int i = 0;
			int len = src.length;
			while (( i < len )) {
				decryptBlock.__hx_invoke4_o(default(double), src, ((double) (i) ), global::haxe.lang.Runtime.undefined, default(double), src, ((double) (i) ), global::haxe.lang.Runtime.undefined);
				i += blockSize;
			}
			
		}
		
		
	}
}


