// Generated by Haxe 4.1.0-rc.1+0d88c583b
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.iterators {
	public class MapKeyValueIterator : global::haxe.lang.HxObject {
		
		public MapKeyValueIterator(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public MapKeyValueIterator(global::haxe.IMap map) {
			global::haxe.iterators.MapKeyValueIterator.__hx_ctor_haxe_iterators_MapKeyValueIterator(((global::haxe.iterators.MapKeyValueIterator) (this) ), ((global::haxe.IMap) (map) ));
		}
		
		
		protected static void __hx_ctor_haxe_iterators_MapKeyValueIterator(global::haxe.iterators.MapKeyValueIterator __hx_this, global::haxe.IMap map) {
			__hx_this.map = map;
			__hx_this.keys = map.keys();
		}
		
		
		public global::haxe.IMap map;
		
		public object keys;
		
		public bool hasNext() {
			return global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(this.keys, "hasNext", 407283053, null));
		}
		
		
		public object next() {
			object key = ((object) (global::haxe.lang.Runtime.callField(this.keys, "next", 1224901875, null)) );
			{
				object __temp_odecl1 = this.map.@get(key);
				return new global::haxe.lang.DynamicObject(new int[]{5343647, 834174833}, new object[]{key, __temp_odecl1}, new int[]{}, new double[]{});
			}
			
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191633396:
					{
						this.keys = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191633396:
					{
						this.keys = ((object) (@value) );
						return @value;
					}
					
					
					case 5442204:
					{
						this.map = ((global::haxe.IMap) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1224901875:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "next", 1224901875)) );
					}
					
					
					case 407283053:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "hasNext", 407283053)) );
					}
					
					
					case 1191633396:
					{
						return this.keys;
					}
					
					
					case 5442204:
					{
						return this.map;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191633396:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.keys)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1224901875:
					{
						return this.next();
					}
					
					
					case 407283053:
					{
						return this.hasNext();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array baseArr) {
			baseArr.push("keys");
			baseArr.push("map");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


