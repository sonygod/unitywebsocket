// Generated by Haxe 4.0.2+606b176a3
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.zip {
	public class Compress : global::haxe.lang.HxObject {
		
		public Compress(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Compress(int level) {
			#line 26 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
			global::haxe.zip.Compress.__hx_ctor_haxe_zip_Compress(this, level);
		}
		#line default
		
		protected static void __hx_ctor_haxe_zip_Compress(global::haxe.zip.Compress __hx_this, int level) {
			#line 27 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
			throw global::haxe.lang.HaxeException.wrap("Not implemented for this platform");
		}
		#line default
		
		public static global::haxe.io.Bytes run(global::haxe.io.Bytes s, int level) {
			#line 39 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
			throw global::haxe.lang.HaxeException.wrap("Not implemented for this platform");
		}
		#line default
		
		public virtual object execute(global::haxe.io.Bytes src, int srcPos, global::haxe.io.Bytes dst, int dstPos) {
			#line 31 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
			return null;
		}
		#line default
		
		public virtual void setFlushMode(global::haxe.zip.FlushMode f) {
		}
		
		
		public virtual void close() {
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
				switch (hash) {
					case 1214453688:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "close", 1214453688)) );
					}
					
					
					case 1661457477:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setFlushMode", 1661457477)) );
					}
					
					
					case 1275922997:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "execute", 1275922997)) );
					}
					
					
					default:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
				switch (hash) {
					case 1214453688:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						this.close();
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						break;
					}
					
					
					case 1661457477:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						this.setFlushMode(((global::haxe.zip.FlushMode) (((object) (dynargs[0]) )) ));
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						break;
					}
					
					
					case 1275922997:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return this.execute(((global::haxe.io.Bytes) (((object) (dynargs[0]) )) ), ((int) (global::haxe.lang.Runtime.toInt(((object) (dynargs[1]) ))) ), ((global::haxe.io.Bytes) (((object) (dynargs[2]) )) ), ((int) (global::haxe.lang.Runtime.toInt(((object) (dynargs[3]) ))) ));
					}
					
					
					default:
					{
						#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				#line 25 "C:\\HaxeToolkit\\haxe\\std\\haxe\\zip\\Compress.hx"
				return null;
			}
			#line default
		}
		
		
	}
}


