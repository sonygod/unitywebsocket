// Generated by Haxe 4.1.0-rc.1+cd0f0219b

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.ds._HashMap {
	public sealed class HashMap_Impl_ {
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::haxe.ds._HashMap.HashMapData _new() {
			#line 38 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			global::haxe.ds._HashMap.HashMapData this1 = new global::haxe.ds._HashMap.HashMapData();
			#line 38 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return ((global::haxe.ds._HashMap.HashMapData) (this1) );
		}
		#line default
		
		public static void @set(global::haxe.ds._HashMap.HashMapData this1, object k, object v) {
			#line 46 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			this1.keys.@set(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ), ((object) (k) ));
			this1.values.@set(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ), ((object) (v) ));
		}
		#line default
		
		public static object @get(global::haxe.ds._HashMap.HashMapData this1, object k) {
			#line 54 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return this1.values.@get(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ));
		}
		#line default
		
		public static bool exists(global::haxe.ds._HashMap.HashMapData this1, object k) {
			#line 61 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return this1.values.exists(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ));
		}
		#line default
		
		public static bool @remove(global::haxe.ds._HashMap.HashMapData this1, object k) {
			#line 68 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			this1.values.@remove(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ));
			return this1.keys.@remove(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "hashCode", 125111323, null))) ));
		}
		#line default
		
		public static object keys(global::haxe.ds._HashMap.HashMapData this1) {
			#line 76 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return new global::haxe.ds._IntMap.IntMapValueIterator(((global::haxe.ds.IntMap) (this1.keys) ));
		}
		#line default
		
		public static global::haxe.ds._HashMap.HashMapData copy(global::haxe.ds._HashMap.HashMapData this1) {
			#line 83 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			global::haxe.ds._HashMap.HashMapData copied = new global::haxe.ds._HashMap.HashMapData();
			copied.keys = this1.keys.copy();
			#line 85 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			copied.values = this1.values.copy();
			return ((global::haxe.ds._HashMap.HashMapData) (copied) );
		}
		#line default
		
		public static object iterator(global::haxe.ds._HashMap.HashMapData this1) {
			#line 93 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return new global::haxe.ds._IntMap.IntMapValueIterator(((global::haxe.ds.IntMap) (this1.values) ));
		}
		#line default
		
		public static global::haxe.iterators.HashMapKeyValueIterator keyValueIterator(global::haxe.ds._HashMap.HashMapData this1) {
			#line 100 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			return new global::haxe.iterators.HashMapKeyValueIterator(((global::haxe.ds._HashMap.HashMapData) (this1) ));
		}
		#line default
		
		public static void clear(global::haxe.ds._HashMap.HashMapData this1) {
			#line 107 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			this1.keys.clear();
			this1.values.clear();
		}
		#line default
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.ds._HashMap {
	public class HashMapData : global::haxe.lang.HxObject {
		
		public HashMapData(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public HashMapData() {
			#line 116 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			global::haxe.ds._HashMap.HashMapData.__hx_ctor_haxe_ds__HashMap_HashMapData(((global::haxe.ds._HashMap.HashMapData) (this) ));
		}
		#line default
		
		protected static void __hx_ctor_haxe_ds__HashMap_HashMapData(global::haxe.ds._HashMap.HashMapData __hx_this) {
			#line 117 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			__hx_this.keys = new global::haxe.ds.IntMap();
			__hx_this.values = new global::haxe.ds.IntMap();
		}
		#line default
		
		public global::haxe.ds.IntMap keys;
		
		public global::haxe.ds.IntMap values;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
				switch (hash) {
					case 1337394146:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						this.values = ((global::haxe.ds.IntMap) (@value) );
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return @value;
					}
					
					
					case 1191633396:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						this.keys = ((global::haxe.ds.IntMap) (@value) );
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return @value;
					}
					
					
					default:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
				switch (hash) {
					case 1337394146:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return this.values;
					}
					
					
					case 1191633396:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return this.keys;
					}
					
					
					default:
					{
						#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array baseArr) {
			#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			baseArr.push("values");
			#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			baseArr.push("keys");
			#line 112 "C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\HashMap.hx"
			base.__hx_getFields(baseArr);
		}
		#line default
		
	}
}


