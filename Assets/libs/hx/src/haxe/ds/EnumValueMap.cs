// Generated by Haxe 4.1.0-rc.1+0d88c583b
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.ds {
	public class EnumValueMap : global::haxe.ds.BalancedTree, global::haxe.IMap {
		
		public EnumValueMap(global::haxe.lang.EmptyObject empty) : base(global::haxe.lang.EmptyObject.EMPTY) {
		}
		
		
		public EnumValueMap() : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::haxe.ds.EnumValueMap.__hx_ctor_haxe_ds_EnumValueMap(((global::haxe.ds.EnumValueMap) (this) ));
		}
		
		
		protected static void __hx_ctor_haxe_ds_EnumValueMap(global::haxe.ds.EnumValueMap __hx_this) {
			global::haxe.ds.BalancedTree.__hx_ctor_haxe_ds_BalancedTree(((global::haxe.ds.BalancedTree) (__hx_this) ));
		}
		
		
		global::haxe.IMap global::haxe.IMap.copy() {
			return ((global::haxe.IMap) (this.copy()) );
		}
		
		
		public override int compare(object k1, object k2) {
			int d = ( global::haxe.root.Type.enumIndex(k1) - global::haxe.root.Type.enumIndex(k2) );
			if (( d != 0 )) {
				return d;
			}
			
			global::haxe.root.Array p1 = global::haxe.root.Type.enumParameters(k1);
			global::haxe.root.Array p2 = global::haxe.root.Type.enumParameters(k2);
			if (( ( p1.length == 0 ) && ( p2.length == 0 ) )) {
				return 0;
			}
			
			return this.compareArgs(p1, p2);
		}
		
		
		public virtual int compareArgs(global::haxe.root.Array a1, global::haxe.root.Array a2) {
			int ld = ( a1.length - a2.length );
			if (( ld != 0 )) {
				return ld;
			}
			
			{
				int _g = 0;
				int _g1 = a1.length;
				while (( _g < _g1 )) {
					int i = _g++;
					int d = this.compareArg(a1.__get(i), a2.__get(i));
					if (( d != 0 )) {
						return d;
					}
					
				}
				
			}
			
			return 0;
		}
		
		
		public virtual int compareArg(object v1, object v2) {
			if (( global::haxe.root.Reflect.isEnumValue(v1) && global::haxe.root.Reflect.isEnumValue(v2) )) {
				return this.compare(v1, v2);
			}
			else if (( ( v1 is global::haxe.root.Array ) && ( v2 is global::haxe.root.Array ) )) {
				return this.compareArgs(((global::haxe.root.Array) (v1) ), ((global::haxe.root.Array) (v2) ));
			}
			else {
				return global::haxe.root.Reflect.compare(((object) (v1) ), ((object) (v2) ));
			}
			
		}
		
		
		public override global::haxe.ds.BalancedTree copy() {
			global::haxe.ds.EnumValueMap copied = new global::haxe.ds.EnumValueMap();
			copied.root = this.root;
			return copied;
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1103412149:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "copy", 1103412149)) );
					}
					
					
					case 244830897:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "compareArg", 244830897)) );
					}
					
					
					case 910198946:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "compareArgs", 910198946)) );
					}
					
					
					case 57219237:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "compare", 57219237)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 57219237:
					case 1103412149:
					{
						return global::haxe.lang.Runtime.slowCallField(this, field, dynargs);
					}
					
					
					case 244830897:
					{
						return this.compareArg(((object) (dynargs[0]) ), ((object) (dynargs[1]) ));
					}
					
					
					case 910198946:
					{
						return this.compareArgs(((global::haxe.root.Array) (((object) (dynargs[0]) )) ), ((global::haxe.root.Array) (((object) (dynargs[1]) )) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
	}
}


