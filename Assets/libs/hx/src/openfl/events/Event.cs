// Generated by Haxe 4.1.0-rc.1+0d88c583b
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace openfl.events {
	public class Event : global::haxe.lang.HxObject {
		
		static Event() {
			unchecked{
				global::openfl.events.Event.__pool = new global::openfl._internal.utils.ObjectPool(null, null, 20);
				global::openfl.events.Event.ACTIVATE = ((string) ("activate") );
				global::openfl.events.Event.ADDED = ((string) ("added") );
				global::openfl.events.Event.ADDED_TO_STAGE = ((string) ("addedToStage") );
				global::openfl.events.Event.CANCEL = ((string) ("cancel") );
				global::openfl.events.Event.CHANGE = ((string) ("change") );
				global::openfl.events.Event.CLEAR = ((string) ("clear") );
				global::openfl.events.Event.CLOSE = ((string) ("close") );
				global::openfl.events.Event.COMPLETE = ((string) ("complete") );
				global::openfl.events.Event.CONNECT = ((string) ("connect") );
				global::openfl.events.Event.CONTEXT3D_CREATE = ((string) ("context3DCreate") );
				global::openfl.events.Event.COPY = ((string) ("copy") );
				global::openfl.events.Event.CUT = ((string) ("cut") );
				global::openfl.events.Event.DEACTIVATE = ((string) ("deactivate") );
				global::openfl.events.Event.ENTER_FRAME = ((string) ("enterFrame") );
				global::openfl.events.Event.EXIT_FRAME = ((string) ("exitFrame") );
				global::openfl.events.Event.FRAME_CONSTRUCTED = ((string) ("frameConstructed") );
				global::openfl.events.Event.FRAME_LABEL = ((string) ("frameLabel") );
				global::openfl.events.Event.FULLSCREEN = ((string) ("fullScreen") );
				global::openfl.events.Event.ID3 = ((string) ("id3") );
				global::openfl.events.Event.INIT = ((string) ("init") );
				global::openfl.events.Event.MOUSE_LEAVE = ((string) ("mouseLeave") );
				global::openfl.events.Event.OPEN = ((string) ("open") );
				global::openfl.events.Event.PASTE = ((string) ("paste") );
				global::openfl.events.Event.REMOVED = ((string) ("removed") );
				global::openfl.events.Event.REMOVED_FROM_STAGE = ((string) ("removedFromStage") );
				global::openfl.events.Event.RENDER = ((string) ("render") );
				global::openfl.events.Event.RESIZE = ((string) ("resize") );
				global::openfl.events.Event.SCROLL = ((string) ("scroll") );
				global::openfl.events.Event.SELECT = ((string) ("select") );
				global::openfl.events.Event.SELECT_ALL = ((string) ("selectAll") );
				global::openfl.events.Event.SOUND_COMPLETE = ((string) ("soundComplete") );
				global::openfl.events.Event.TAB_CHILDREN_CHANGE = ((string) ("tabChildrenChange") );
				global::openfl.events.Event.TAB_ENABLED_CHANGE = ((string) ("tabEnabledChange") );
				global::openfl.events.Event.TAB_INDEX_CHANGE = ((string) ("tabIndexChange") );
				global::openfl.events.Event.TEXTURE_READY = ((string) ("textureReady") );
				global::openfl.events.Event.UNLOAD = ((string) ("unload") );
			}
		}
		
		
		public Event(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Event(string type, object bubbles, object cancelable) {
			global::openfl.events.Event.__hx_ctor_openfl_events_Event(this, type, bubbles, cancelable);
		}
		
		
		protected static void __hx_ctor_openfl_events_Event(global::openfl.events.Event __hx_this, string type, object bubbles, object cancelable) {
			unchecked {
				bool cancelable1 = ( (( cancelable == default(object) )) ? (false) : (global::haxe.lang.Runtime.toBool(cancelable)) );
				bool bubbles1 = ( (( bubbles == default(object) )) ? (false) : (global::haxe.lang.Runtime.toBool(bubbles)) );
				__hx_this.type = type;
				__hx_this.bubbles = bubbles1;
				__hx_this.cancelable = cancelable1;
				__hx_this.eventPhase = ((int) (2) );
			}
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::openfl._internal.utils.ObjectPool __pool;
		
		public static string ACTIVATE;
		
		public static string ADDED;
		
		public static string ADDED_TO_STAGE;
		
		public static string CANCEL;
		
		public static string CHANGE;
		
		public static string CLEAR;
		
		public static string CLOSE;
		
		public static string COMPLETE;
		
		public static string CONNECT;
		
		public static string CONTEXT3D_CREATE;
		
		public static string COPY;
		
		public static string CUT;
		
		public static string DEACTIVATE;
		
		public static string ENTER_FRAME;
		
		public static string EXIT_FRAME;
		
		public static string FRAME_CONSTRUCTED;
		
		public static string FRAME_LABEL;
		
		public static string FULLSCREEN;
		
		public static string ID3;
		
		public static string INIT;
		
		public static string MOUSE_LEAVE;
		
		public static string OPEN;
		
		public static string PASTE;
		
		public static string REMOVED;
		
		public static string REMOVED_FROM_STAGE;
		
		public static string RENDER;
		
		public static string RESIZE;
		
		public static string SCROLL;
		
		public static string SELECT;
		
		public static string SELECT_ALL;
		
		public static string SOUND_COMPLETE;
		
		public static string TAB_CHILDREN_CHANGE;
		
		public static string TAB_ENABLED_CHANGE;
		
		public static string TAB_INDEX_CHANGE;
		
		public static string TEXTURE_READY;
		
		public static string UNLOAD;
		
		public bool bubbles;
		
		public bool cancelable;
		
		public object currentTarget;
		
		public int eventPhase;
		
		public object target;
		
		public string type;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public bool __isCanceled;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public bool __isCanceledNow;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public bool __preventDefault;
		
		public virtual global::openfl.events.Event clone() {
			global::openfl.events.Event @event = new global::openfl.events.Event(this.type, this.bubbles, this.cancelable);
			@event.eventPhase = this.eventPhase;
			@event.target = this.target;
			@event.currentTarget = this.currentTarget;
			return @event;
		}
		
		
		public virtual string formatToString(string className, string p1, string p2, string p3, string p4, string p5) {
			global::haxe.root.Array parameters = new global::haxe.root.Array(new object[]{});
			if (( p1 != null )) {
				parameters.push(p1);
			}
			
			if (( p2 != null )) {
				parameters.push(p2);
			}
			
			if (( p3 != null )) {
				parameters.push(p3);
			}
			
			if (( p4 != null )) {
				parameters.push(p4);
			}
			
			if (( p5 != null )) {
				parameters.push(p5);
			}
			
			return global::haxe.lang.Runtime.toString(global::haxe.root.Reflect.callMethod(this, ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "__formatToString", 762525219)) ), new global::haxe.root.Array(new object[]{className, parameters})));
		}
		
		
		public virtual bool isDefaultPrevented() {
			return this.__preventDefault;
		}
		
		
		public virtual void preventDefault() {
			if (this.cancelable) {
				this.__preventDefault = true;
			}
			
		}
		
		
		public virtual void stopImmediatePropagation() {
			this.__isCanceled = true;
			this.__isCanceledNow = true;
		}
		
		
		public virtual void stopPropagation() {
			this.__isCanceled = true;
		}
		
		
		public virtual string toString() {
			return this.__formatToString("Event", new global::haxe.root.Array(new object[]{"type", "bubbles", "cancelable"}));
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public virtual string __formatToString(string className, global::haxe.root.Array parameters) {
			string output = global::haxe.lang.Runtime.concat("[", className);
			object arg = null;
			{
				int _g = 0;
				while (( _g < parameters.length )) {
					string param = global::haxe.lang.Runtime.toString(parameters.__get(_g));
					 ++ _g;
					arg = global::haxe.root.Reflect.field(this, param);
					if (( arg is string )) {
						output = global::haxe.lang.Runtime.concat(output, global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" ", param), "=\""), global::haxe.root.Std.@string(arg)), "\""));
					}
					else {
						output = global::haxe.lang.Runtime.concat(output, global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" ", param), "="), global::haxe.root.Std.@string(arg)));
					}
					
				}
				
			}
			
			output = global::haxe.lang.Runtime.concat(output, "]");
			return output;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 116192081:
					{
						this.target = ((object) (@value) );
						return @value;
					}
					
					
					case 1044656577:
					{
						this.eventPhase = ((int) (@value) );
						return @value;
					}
					
					
					case 1783198826:
					{
						this.currentTarget = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 467974121:
					{
						this.__preventDefault = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 94306131:
					{
						this.__isCanceledNow = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1382589827:
					{
						this.__isCanceled = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1292432058:
					{
						this.type = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 116192081:
					{
						this.target = ((object) (@value) );
						return @value;
					}
					
					
					case 1044656577:
					{
						this.eventPhase = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1783198826:
					{
						this.currentTarget = ((object) (@value) );
						return @value;
					}
					
					
					case 1148821524:
					{
						this.cancelable = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1633074023:
					{
						this.bubbles = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 762525219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "__formatToString", 762525219)) );
					}
					
					
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 544309738:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "stopPropagation", 544309738)) );
					}
					
					
					case 1533460349:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "stopImmediatePropagation", 1533460349)) );
					}
					
					
					case 1738878153:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "preventDefault", 1738878153)) );
					}
					
					
					case 69677120:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "isDefaultPrevented", 69677120)) );
					}
					
					
					case 2033429251:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "formatToString", 2033429251)) );
					}
					
					
					case 1214452573:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "clone", 1214452573)) );
					}
					
					
					case 467974121:
					{
						return this.__preventDefault;
					}
					
					
					case 94306131:
					{
						return this.__isCanceledNow;
					}
					
					
					case 1382589827:
					{
						return this.__isCanceled;
					}
					
					
					case 1292432058:
					{
						return this.type;
					}
					
					
					case 116192081:
					{
						return this.target;
					}
					
					
					case 1044656577:
					{
						return this.eventPhase;
					}
					
					
					case 1783198826:
					{
						return this.currentTarget;
					}
					
					
					case 1148821524:
					{
						return this.cancelable;
					}
					
					
					case 1633074023:
					{
						return this.bubbles;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 116192081:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.target)) );
					}
					
					
					case 1044656577:
					{
						return ((double) (this.eventPhase) );
					}
					
					
					case 1783198826:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.currentTarget)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 762525219:
					{
						return this.__formatToString(global::haxe.lang.Runtime.toString(((object) (dynargs[0]) )), ((global::haxe.root.Array) (((object) (dynargs[1]) )) ));
					}
					
					
					case 946786476:
					{
						return this.toString();
					}
					
					
					case 544309738:
					{
						this.stopPropagation();
						break;
					}
					
					
					case 1533460349:
					{
						this.stopImmediatePropagation();
						break;
					}
					
					
					case 1738878153:
					{
						this.preventDefault();
						break;
					}
					
					
					case 69677120:
					{
						return this.isDefaultPrevented();
					}
					
					
					case 2033429251:
					{
						return this.formatToString(global::haxe.lang.Runtime.toString(((object) (dynargs[0]) )), global::haxe.lang.Runtime.toString(((object) (dynargs[1]) )), global::haxe.lang.Runtime.toString(((object) (dynargs[2]) )), global::haxe.lang.Runtime.toString(((object) (dynargs[3]) )), global::haxe.lang.Runtime.toString(((object) (dynargs[4]) )), global::haxe.lang.Runtime.toString(((object) (dynargs[5]) )));
					}
					
					
					case 1214452573:
					{
						return this.clone();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array baseArr) {
			baseArr.push("__preventDefault");
			baseArr.push("__isCanceledNow");
			baseArr.push("__isCanceled");
			baseArr.push("type");
			baseArr.push("target");
			baseArr.push("eventPhase");
			baseArr.push("currentTarget");
			baseArr.push("cancelable");
			baseArr.push("bubbles");
			base.__hx_getFields(baseArr);
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}


